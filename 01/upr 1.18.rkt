#lang racket
; Используя результаты упражнений 1.16 и 1.17, разработайте процедуру, которая порождает итеративный процесс для умножения двух чисел с помощью сложения, удвоения и деления пополам, и
; затрачивает логарифмическое число шагов (этот алгоритм иногда называют методом русского крестьянина)
(define (double x)
  (* x 2))

(define (halve x)
  (/ x 2))

(define (fast-* a b) 
  (fast-*-iter a b 0))

(define (fast-*-iter a b c) 
  (cond ((= b 0) c) 
        ((even? b) (fast-*-iter (double a) (halve b) c)) 
        (else (fast-*-iter a (- b 1) (+ c a)))))

(fast-* 1234576 4568785322)
(fast-* 3 8)
(fast-* 0 0)
(fast-* 1 0)
(fast-* 0 1)
